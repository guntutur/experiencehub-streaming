{
  topic {
    input: "galaxy"
    output: "galaxy_result_test"
    object: "galaxy_result_object"
    object_routing: "galaxy_result_object_routing"
  }

  stopWords: ["a", "an", "the"]

  windowDuration: 30s

  slideDuration: 2s

  # all related spark configuration
  spark {
    "master": "local[*]"
    "app-name": "Experiencehub Spark-Rabbitmq Streaming Job"
    "port.maxRetries": 100 // don't know why it is 100
    "streaming.backpressure.enabled": "true"
    "num-executors": 2
    "executor-cores": 3

    # "spark.serializer": "org.apache.spark.serializer.KryoSerializer"
    # "spark.kryo.registrator": "example.WordCountKryoRegistration"
    # "spark.streaming.receiver.maxRate": 15

    "mongodb.input.uri": ""
    "mongodb.output.uri": ""
  }

  rabbitmq {
    "host" : "localhost"
    "queue" : {
        "music" : "ent-user-play-music"
        "movie" : "ent-user-play-movie"
        "feedback" : "ent-user-feedback"
        "local" : "test"
    }
    "user" : "admin"
    "password" : "rahasia2018"
  }

  mongo {
    "host" : "localhost"
    "db" : "experiencehub"
    "port" : "27017"
    "collection" : {
        "music" : "ent-user-play-music"
        "movie" : "ent-user-play-movie"
        "feedback" : "ent-user-feedback"
    }
  }

  api {
    "key" : "Basic 35cb7ebf9-3dcc-h28s-b056-2522c1eed03e"
    "feedback" : "http://astra-capcus-api.stagingapps.net/advertisement/get"
    "feedback-local" : "http://localhost:8081/advertisement/get"
  }

  # for duration of batch stream process, it takes 2 second before finally all data captured on that timeframe processed
  streamingBatchDuration: 2s
  # physical dir for store spark checkpoint data, this will led to /tmp
  streamingCheckpointDir: ${java.io.tmpdir}
}